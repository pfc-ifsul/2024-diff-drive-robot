<?xml version="1.0"?>

<robot name="robot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Right wheel -->
  <gazebo reference="wheel_right_link">
    <mu1>1000000000000000.0</mu1>
    <mu2>1000000000000000.0</mu2>
    <kp>1000000000000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>
  <!-- Left wheel -->
  <gazebo reference="wheel_left_link">
    <mu1>1000000000000000.0</mu1>
    <mu2>1000000000000000.0</mu2>
    <kp>1000000000000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>
  <!-- Rear caster wheel -->
  <gazebo reference="caster_rear_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>
  <!-- Front caster wheel -->
  <gazebo reference="caster_front_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
  </gazebo>

  <!-- https://medium.com/@bytesrobotics/a-review-of-the-ros2-urdf-gazebo-sensor-91e947c633d7 -->
  <!-- ROS 2 IMU -->
  <gazebo reference="imu_link">
    <sensor name="imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin name="imu" filename="libgazebo_ros_imu_sensor.so"/>
    </sensor>
  </gazebo>

  <!-- https://automaticaddison.com/how-to-add-ultrasonic-sensors-to-an-sdf-file-for-gazebo/ -->
  <!-- https://github.com/ros-simulation/gazebo_ros_pkgs/wiki/ROS-2-Migration:-Ray-sensors -->
  <!-- ROS 2 Ultrasonic -->
  <gazebo reference="ultrasonic_1_link">
    <sensor name="ultrasonic_1" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.08</min_angle>
            <max_angle>0.08</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>0.01</min_angle>
            <max_angle>0.01</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.02</min>
          <max>4.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="ultrasonic_sensor_1" filename="libgazebo_ros_ray_sensor.so">
        <!-- <output_type>sensor_msgs/Range</output_type> -->
        <ros>
          <remapping>~/out:=ultrasonic_sensor_1</remapping>
        </ros>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>ultrasonic_1_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="ultrasonic_2_link">
    <sensor name="ultrasonic_2" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.08</min_angle>
            <max_angle>0.08</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>0.01</min_angle>
            <max_angle>0.01</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.02</min>
          <max>4.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="ultrasonic_sensor_2" filename="libgazebo_ros_ray_sensor.so">
        <!-- <output_type>sensor_msgs/Range</output_type> -->
        <ros>
          <remapping>~/out:=ultrasonic_sensor_2</remapping>
        </ros>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>ultrasonic_2_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="ultrasonic_3_link">
    <sensor name="ultrasonic_3" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>-0.08</min_angle>
            <max_angle>0.08</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1</resolution>
            <min_angle>0.01</min_angle>
            <max_angle>0.01</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.02</min>
          <max>4.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="ultrasonic_sensor_3" filename="libgazebo_ros_ray_sensor.so">
        <!-- <output_type>sensor_msgs/Range</output_type> -->
        <ros>
          <remapping>~/out:=ultrasonic_sensor_3</remapping>
        </ros>
        <radiation_type>ultrasound</radiation_type>
        <frame_name>ultrasonic_3_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

</robot>
